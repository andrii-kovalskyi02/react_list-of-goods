{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","a","b","length","reverse","App","state","NONE","handleClick","type","setState","this","className","classNames","onClick","ALPHABET","LENGTH","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAK,EACHE,EAAaC,OACb,MAEF,KAAK,EACHD,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAY7C,OAJIL,GACFC,EAAaK,UAGRL,G,SAnCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAMY,EAAb,4MACEC,MAAkC,CAChCT,SAAUJ,EAASc,KACnBT,YAAY,GAHhB,EAMEU,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEb,SAAUY,KAP9B,4CAUE,WAAU,IAAD,OACP,EAAiCE,KAAKL,MAA9BT,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEH,KAAK,SACLG,UAAWC,IACT,iBACA,CAAE,WAAyB,IAAbhB,IAEhBiB,QAAS,kBAAM,EAAKN,YAAYf,EAASsB,WAN3C,iCAWA,wBACEN,KAAK,SACLG,UAAWC,IACT,oBACA,CAAE,WAAyB,IAAbhB,IAEhBiB,QAAS,kBAAM,EAAKN,YAAYf,EAASuB,SAN3C,4BAWA,wBACEP,KAAK,SACLG,UAAWC,IACT,oBACA,CAAE,YAAaf,IAEjBgB,QAAS,kBAAM,EAAKJ,UAAS,SAAAJ,GAAK,MAChC,CAAER,YAAaQ,EAAMR,gBAPzB,sBAae,IAAbD,GAAkBC,IAClB,wBACEW,KAAK,SACLG,UAAU,4BACVE,QAAS,kBAAM,EAAKJ,SAAS,CAC3Bb,SAAUJ,EAASc,KACnBT,YAAY,KALhB,sBAaJ,6BACGH,EAAkBD,EAAiBiB,KAAKL,OAAOW,KAAI,SAAAC,GAAI,OACtD,oBAAe,UAAQ,OAAvB,SACGA,GADMA,eAnErB,GAAyBC,IAAMC,WCrD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.79e4805c.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case 1:\n      visibleGoods.sort();\n      break;\n\n    case 2:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    case 0:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state: Readonly<ReorderOptions> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  handleClick = (type: SortType) => {\n    this.setState({ sortType: type });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== 1 },\n            )}\n            onClick={() => this.handleClick(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== 2 },\n            )}\n            onClick={() => this.handleClick(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={() => this.setState(state => (\n              { isReversed: !state.isReversed }\n            ))}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== 0 || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.setState({\n                sortType: SortType.NONE,\n                isReversed: false,\n              })}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, this.state).map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}