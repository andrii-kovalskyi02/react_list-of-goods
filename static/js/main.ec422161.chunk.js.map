{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","LENGTH","a","b","length","NONE","reverse","App","state","handleClick","type","setState","this","className","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,OACb,MAEF,KAAKR,EAASS,OACZH,EAAaE,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAG3C,KAAKZ,EAASa,MAShB,OAJIR,GACFC,EAAaQ,UAGRR,G,SAnCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAMe,EAAb,4MACEC,MAAkC,CAChCZ,SAAUJ,EAASa,KACnBR,YAAY,GAHhB,EAMEY,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEf,SAAUc,KAP9B,4CAUE,WAAU,IAAD,OACP,EAAiCE,KAAKJ,MAA9BZ,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEH,KAAK,SACLG,UAAWC,IACT,iBACA,CAAE,WAAYlB,IAAaJ,EAASO,WAEtCgB,QAAS,kBAAM,EAAKN,YAAYjB,EAASO,WAN3C,iCAWA,wBACEW,KAAK,SACLG,UAAWC,IACT,oBACA,CAAE,WAAYlB,IAAaJ,EAASS,SAEtCc,QAAS,kBAAM,EAAKN,YAAYjB,EAASS,SAN3C,4BAWA,wBACES,KAAK,SACLG,UAAWC,IACT,oBACA,CAAE,YAAajB,IAEjBkB,QAAS,kBAAM,EAAKJ,UAAS,SAAAH,GAAK,MAChC,CAAEX,YAAaW,EAAMX,gBAPzB,sBAaED,IAAaJ,EAASa,MAAQR,IAC9B,wBACEa,KAAK,SACLG,UAAU,4BACVE,QAAS,kBAAM,EAAKJ,SAAS,CAC3Bf,SAAUJ,EAASa,KACnBR,YAAY,KALhB,sBAaJ,6BACGH,EAAkBD,EAAiBmB,KAAKJ,OAAOQ,KAAI,SAAAC,GAAI,OACtD,oBAAe,UAAQ,OAAvB,SACGA,GADMA,eAnErB,GAAyBC,IAAMC,WCrD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ec422161.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort();\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state: Readonly<ReorderOptions> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  handleClick = (type: SortType) => {\n    this.setState({ sortType: type });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => this.handleClick(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => this.handleClick(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={() => this.setState(state => (\n              { isReversed: !state.isReversed }\n            ))}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.setState({\n                sortType: SortType.NONE,\n                isReversed: false,\n              })}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, this.state).map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}